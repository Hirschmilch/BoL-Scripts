if myHero.charName ~= 'Fiora' then return end

local target = {aa = nil, q = nil, r = nil, botrk = nil}
local qReady, wReady, eReady, rReady = false, false, false, false
local last, windup, animation = 0, 3, 0.65
local enemyHeroes, projectileSpeed, parry, targeted, aoe = {}, {}, {}, {}, {}

local selected = nil
function FioraYouWHORE()
	target.aa, target.q, target.r, target.botrk = nil, nil, nil, nil
	if selected then
	    if ValidTarget(selected) and GetDistanceSqr(selected) < 4000000 then
			local dtSqr = GetDistanceSqr(selected)
			if dtSqr <= 360000 then
				target.q = selected
				if dtSqr <= 202500 then
					target.botrk = selected
					if dtSqr <= 160000 then
						target.r = selected
						local tRange = myHero.range + selected.boundingRadius + 65
						if dtSqr <= tRange * tRange then
							target.aa = selected
						end
					end
				end
			end
		else
			print('<font color=\'#999999\'>'..selected.charName..'<font color=\'#CC1500\'><b> unselected</b></font></font>')
			selected = nil
		end
	end
	if not selected then
		local ratio = {aa = 0, q = 0, r = 0, botrk = 0}
		for i, enemy in ipairs(enemyHeroes)  do
			if ValidTarget(enemy) then
				local dtSqr = GetDistanceSqr(enemy)
				local cRatio = myHero.totalDamage / enemy.armor / enemy.health
				if dtSqr <= 360000 then
					if cRatio > ratio.q then target.q, ratio.q = enemy, cRatio end
					if dtSqr <= 202500 then
						if cRatio > ratio.botrk then target.botrk, ratio.botrk = enemy, cRatio end
						if dtSqr <= 160000 then
							if cRatio > ratio.r then target.r, ratio.r = enemy, cRatio end
							local tRange = myHero.range + enemy.boundingRadius + 65
							if dtSqr <= tRange * tRange and cRatio > ratio.aa then
								target.aa, ratio.aa = enemy, cRatio
							end
						end
					end
				end
	        end
		end
	end
end

function OnWndMsg(msg, key)
	if msg == 514 then
		local current, temp = nil, nil
		for i, enemy in ipairs(enemyHeroes) do
			if GetDistanceSqr(enemy, mousePos) < 40000 then
				current = enemy
			end
		end
	    if selected then
		    print('<font color=\'#999999\'>'..selected.charName..'<font color=\'#CC1500\'><b> unselected</b></font></font>')
		    temp = selected
		    selected = nil
		end
	    if (current and current ~= temp) then
		    selected = current
		    print('<font color=\'#999999\'>'..selected.charName..'<font color=\'#00AA00\'><b> selected</b></font></font>')
		end
	end
end

function Botrk()
	if target.botrk and Menu.Combo.Item then
		CastItem(3153, target.botrk)
		CastItem(3144, target.botrk)
	end
end

function CastQ(target)
	CastSpell(_Q, target)
	if not CanMove(0) then
		last = 0
	end
end

function CastRangedQ()
	if not qReady or not target.q or not Menu.Combo.Q.On then return end
	if GetDistanceSqr(target.q) > Menu.Combo.Q.Range * Menu.Combo.Q.Range then
		CastQ(target.q)
	end
end

function CastR()
	if rReady then
		CastSpell(_R, target.r)
	end
end

function IsAttack(spell)
 	return spell.target and spell.target.isMe and spell.name:lower():find('attack') and not spell.name:lower():find('monkeykingdoubleattack')
end

function IsDodgable(spell)
	return wReady and parry[spell.name] and GetDistanceSqr(spell.endPos) < 2500
end

function DodgeTargeted(spell)
	return spell.target and spell.target.isMe and targeted[spell.name]
end

function DodgeAoe(spell)
	return aoe[spell.name] and GetDistanceSqr(spell.endPos) < aoe[spell.name] * aoe[spell.name]
end

local wPrediction = {}
function OnCreateObj(obj)
	DelayAction(function(o)
		for _, aa in ipairs(wPrediction) do
			if aa.speed and o.networkID == aa.projectileID then
				aa.valid = true
			end
		end
	end, 0, {obj})
end

function ProcW()
	if not wReady then return end
	local time = os.clock() + GetLatency() / 2000
	for i, aa in ipairs(wPrediction) do
		if aa.speed then
			local gravity = GetDistance(aa.source) / aa.speed
			if time > aa.start + gravity * 0.99 then
				table.remove(wPrediction, i)
				i = i - 2
			elseif aa.valid and time > aa.start then
				CastSpell(_W) 
			end
		else
			if time > aa.start then
				table.remove(wPrediction, i)
				i = i - 2
			elseif time > aa.start * 0.2 then
				CastSpell(_W)
			end
		end
	end
end

function OnProcessSpell(unit, spell)
	if not unit.isMe and unit.type == myHero.type and unit.team ~= myHero.team then
		if IsAttack(spell) and Menu.Combo.W[unit.charName] then
			if GetDistance(unit) < 350 and unit.range > 300 then
				DelayAction(function()
					if wReady then
						CastSpell(_W)
					end
				end, spell.windUpTime)
			else
				table.insert(wPrediction, {source = unit, start = os.clock() + spell.windUpTime - GetLatency() / 2000, speed = projectileSpeed[unit.charName], projectileID = spell.projectileID, valid = false})
			end
		elseif IsDodgable(spell) and Menu.Combo.W[spell.name] then
			CastSpell(_W)
		end
		if Menu.Combo.R[spell.name] then
			if not target.r then return end
			if DodgeTargeted(spell) or DodgeAoe(spell) then
				CastR()
			end
		end
	elseif unit.isMe then
    	if spell.name:lower():find('attack') then
			windup = spell.windUpTime
			animation = spell.animationTime
			last = os.clock() - GetLatency() / 2000
			OnAttack()
			DelayAction(AfterAttack, windup - GetLatency() / 2000 + Menu.OS.After / 1000)
			elseif spell.name:lower():find('flurry') then
				last = 0
			end
		end
end

function OnAttack()
    if Menu.Combo.Key and target.aa and Menu.Combo.Item then
    	CastItem(3142)
    end
end

function AfterAttack() 
	if Menu.Combo.Key and target.aa then
		if Menu.Combo.Han then
			if qReady and eReady then 
				CastSpell(_E)
				CastSpell(_Q, target.aa)
	        elseif eReady and (GetInventoryItemIsCastable(3074) or GetInventoryItemIsCastable(3077)) then
	            CastSpell(_E)
	            if GetInventoryItemIsCastable(3074) then
	                CastItem(3074)
	            elseif GetInventoryItemIsCastable(3077) then
	           	 	CastItem(3077)
	            end
	        elseif qReady and not eReady then
	            CastSpell(_Q, target.aa)
	            if GetInventoryItemIsCastable(3074) then
	                CastItem(3074)
	            elseif GetInventoryItemIsCastable(3077) then
	                CastItem(3077)
	            end
	        elseif eReady then 
	            CastSpell(_E)
	            if GetInventoryItemIsCastable(3074) then
	                CastItem(3074)
	            elseif GetInventoryItemIsCastable(3077) then
	                CastItem(3077)
	            end
	        elseif GetInventoryItemIsCastable(3074) then
	            CastItem(3074)
	        elseif GetInventoryItemIsCastable(3077) then
	            CastItem(3077)
	        elseif qReady then
				CastSpell(_Q, target.aa)
	        end
		elseif not Menu.Combo.Han then
	    	if eReady and Menu.Combo.E.On then
	    		CastSpell(_E)
	    	end
	    	if Menu.Combo.Item then
		        if GetInventoryItemIsCastable(3074) then
		            CastItem(3074)
		        elseif GetInventoryItemIsCastable(3077) then
		            CastItem(3077)
		        end
		    end
	    end
    end
end

function CanAttack()
	if last <= os.clock() then
		return os.clock() + GetLatency() / 2000 > last + animation
	end
	return false
end

function CanMove(Extra)
	if last <= os.clock() then
		return os.clock() + GetLatency() / 2000 > last + windup + Extra
	end
	return false
end

function VectorPos(v1, v2, range)
	local v3 = Vector(v1)
    local v4 = Vector(v2)
    local v5 = (v3 - v4):normalized() * range
    local p1 = v3 + v5
    local p2 = v3 - v5
    return GetDistanceSqr(v4, p1) < GetDistanceSqr(v4, p2) and p1 or p2
end

function Orbwalk(target)
	if target and CanAttack() then
		myHero:Attack(target)
	elseif CanMove(Menu.OS.Orbwalk / 1000) and GetDistanceSqr(mousePos) > 57.5 * 57.5 then
		local movePos = VectorPos(myHero, mousePos, 250)
		myHero:MoveTo(movePos.x, movePos.z)
	end
end

function round(num) 
    if num >= 0 then return math.floor(num+.5) else return math.ceil(num-.5) end
end

function DrawCircleNextLvl(x, y, z, radius, width, color, chordlength)
    radius = radius or 300
  	quality = math.max(8,round(180/math.deg((math.asin((chordlength/(2*radius)))))))
  	quality = 2 * math.pi / quality
 	radius = radius*.92
    local points = {}
    for theta = 0, 2 * math.pi + quality, quality do
        local c = WorldToScreen(D3DXVECTOR3(x + radius * math.cos(theta), y, z - radius * math.sin(theta)))
        points[#points + 1] = D3DXVECTOR2(c.x, c.y)
    end
    DrawLines2(points, width or 1, color or 4294967295)
end

function DrawCircle2(x, y, z, radius, color)
    local vPos1 = Vector(x, y, z)
    local vPos2 = Vector(cameraPos.x, cameraPos.y, cameraPos.z)
    local tPos = vPos1 - (vPos1 - vPos2):normalized() * radius
    local sPos = WorldToScreen(D3DXVECTOR3(tPos.x, tPos.y, tPos.z))
    if OnScreen({ x = sPos.x, y = sPos.y }, { x = sPos.x, y = sPos.y }) then
        DrawCircleNextLvl(x, y, z, radius, 1, color, 75) 
    end
end

function Color(t)
	return ARGB(t[1], t[2], t[3], t[4])
end

function OnDraw()
	if myHero.dead then return end
	if Menu.Draw.Q.On then
		if Menu.Draw.Q.Free then
			DrawCircle2(myHero.x, myHero.y, myHero.z, 600, Color(Menu.Draw.Q.Color))
		else
			DrawCircle(myHero.x, myHero.y, myHero.z, 600, Color(Menu.Draw.Q.Color))
		end
	end
	if Menu.Draw.IQ.On then
		if Menu.Draw.IQ.Free then
			DrawCircle2(myHero.x, myHero.y, myHero.z, Menu.Combo.Q.Range, Color(Menu.Draw.IQ.Color))
		else
			DrawCircle(myHero.x, myHero.y, myHero.z, Menu.Combo.Q.Range, Color(Menu.Draw.IQ.Color))
		end
	end
	if Menu.Draw.R.On then
		if Menu.Draw.R.Free then
			DrawCircle2(myHero.x, myHero.y, myHero.z, 400, Color(Menu.Draw.R.Color))
		else
			DrawCircle(myHero.x, myHero.y, myHero.z, 400, Color(Menu.Draw.R.Color))
		end
	end
	if Menu.Draw.AA.On then
		if Menu.Draw.AA.Free then
			DrawCircle2(myHero.x, myHero.y, myHero.z, myHero.range + 65, Color(Menu.Draw.AA.Color))
		else
			DrawCircle(myHero.x, myHero.y, myHero.z, myHero.range + 65, Color(Menu.Draw.AA.Color))
		end
	end
	if Menu.Draw.Target and selected then
		DrawCircle2(selected.x, selected.y, selected.z, 140, ARGB(255, 255, 0, 0))
	end
end

function Combo()
	if Menu.Combo.R.Helper then
	    CastR()
	end
	if Menu.Combo.Key then
		Orbwalk(target.aa)
		CastRangedQ()
		Botrk()
	end
end

function OnTickCheck()
	qReady = myHero:CanUseSpell(_Q) == READY
  	wReady = myHero:CanUseSpell(_W) == READY
  	eReady = myHero:CanUseSpell(_E) == READY
  	rReady = myHero:CanUseSpell(_R) == READY
  	FioraYouWHORE()
  	ProcW()
end

function OnTick()
    if myHero.dead then wPrediction = {} return end
    OnTickCheck()
	Combo()
end

local projectileSpeedTable = {['Velkoz'] = 2000, ['Xerath'] = 2000, ['Ziggs'] = 1500, ['KogMaw'] = 1800,['Ashe'] = 2000 , ['Soraka'] = 1000 , ['Jinx'] = 2750, ['Ahri'] = 1750, ['Lulu'] = 1450, ['Lissandra'] = 2000, ['Draven'] = 1700, ['FiddleSticks'] = 1750 , ['Sivir'] = 1750 , ['Corki'] = 2000 , ['Janna'] = 1200 , ['Sona'] = 1500, ['Caitlyn'] = 2500, ['Anivia'] = 1400, ['Heimerdinger'] = 1500 , ['Leblanc'] = 1700 , ['Viktor'] = 2300 , ['Orianna'] = 1450 , ['Vladimir'] = 1400 , ['Nidalee'] = 1750 , ['Syndra'] = 1800 , ['Veigar'] = 1100 , ['Twitch'] = 2500 , ['Urgot'] = 1300 , ['Karma'] = 1500 , ['TwistedFate'] = 1500 , ['Varus'] = 2000, ['Swain'] = 1600 , ['Vayne'] = 2000, ['Quinn'] = 2000, ['Brand'] = 2000 , ['Teemo'] = 1300 , ['Annie'] = 1200, ['Elise'] = 1600 , ['Nami'] = 1500, ['Tristana'] = 2250 , ['Graves'] = 3000 , ['Morgana'] = 1600, ['MissFortune'] = 2000, ['Cassiopeia'] = 1200, ['Lucian'] = 2800, ['Kennen'] = 1600 , ['Ryze'] = 2400, ['Lux'] = 1600 , ['Ezreal'] = 2000, ['Zyra'] = 1700 , ['Karthus'] = 1200 , ['Zilean'] = 1200, ['Malzahar'] = 2000}
local parryTable = {['MissFortune'] = 'MissFortuneRicochetShot', ['Gangplank'] = 'Parley', ['Jax'] = 'jaxrelentlessattack', ['Talon'] = 'TalonNoxianDiplomacyAttack', ['Sivir'] = 'RicochetAttack', ['Renekton'] = 'RenektonExecute', ['Garen'] = 'GarenSlash2', ['Nasus'] = 'NasusQAttack', ['Shyvana'] = 'ShyvanaDoubleAttackHit', ['Leona'] = 'LeonaShieldOfDaybreakAttack', ['Darius'] = 'DariusNoxianTacticsONHAttack'}
local targetedTable = {['Darius'] = 'DariusExecute', ['Garen'] = 'GarenR', ['Syndra'] = 'syndrar', ['Tristana'] = 'BusterShot', ['Veigar'] = 'VeigarPrimordialBurst'}
function InitGame()
	for i, enemy in ipairs(GetEnemyHeroes()) do
		table.insert(enemyHeroes, enemy)
		if projectileSpeedTable[enemy.charName] then
			table.insert(projectileSpeed, enemy.charName)
			projectileSpeed[enemy.charName] = projectileSpeedTable[enemy.charName]
		end
		if parryTable[enemy.charName] then
			parry[enemy.charName] = parryTable[enemy.charName]
		end
		if targetedTable[enemy.charName] then
			targeted[enemy.charName] = targetedTable[enemy.charName]
		end
		if enemy.charName == 'Amumu' then
			aoe['CurseoftheSadMummy'] = 600
		elseif enemy.charName == 'Gragas' then
			aoe['GragasR'] = 375
		elseif enemy.charName == 'Annie' then
			aoe['InfernalGuardian'] = 270
		elseif enemy.charName == 'Malphite' then
			aoe['UFSlash'] = 270
		elseif enemy.charName == 'Galio' then
			aoe['GalioIdolOfDurand'] = 600
		end
	end
	Menu()
end

function Menu()
	Menu = scriptConfig('Han Fiora', 'HMFiora3')
	Menu:addSubMenu('Han Settings', 'Combo')
	Menu.Combo:addSubMenu('SPELL _Q', 'Q')
	Menu.Combo.Q:addParam('On', 'Use Q', SCRIPT_PARAM_ONOFF, true)
	Menu.Combo.Q:addParam('Range', 'Min range to cast Q', SCRIPT_PARAM_SLICE, 325, 0, 600, 0)
	Menu.Combo:addSubMenu('SPELL _W', 'W')
	Menu.Combo.W:addParam('Info1', 'Auto Attacks', SCRIPT_PARAM_INFO, '')
	local aa = false
	for i, enemy in ipairs(enemyHeroes) do
		Menu.Combo.W:addParam(enemy.charName, enemy.charName, SCRIPT_PARAM_ONOFF, true)
		aa = true
	end
	if not aa then
		Menu.Combo.W:addParam('Info2', 'No enemies found', SCRIPT_PARAM_INFO, '')
	end
	Menu.Combo.W:addParam('Info3', '', SCRIPT_PARAM_INFO, '')
	Menu.Combo.W:addParam('Info4', 'Spells', SCRIPT_PARAM_INFO, '')
	local ss = false
	for i, spell in pairs(parry) do
		Menu.Combo.W:addParam(i, i, SCRIPT_PARAM_ONOFF, true)
		ss = true
	end
	if not ss then
		Menu.Combo.W:addParam('Info5', 'No spells to parry', SCRIPT_PARAM_INFO, '')
	end
	Menu.Combo:addSubMenu('SPELL _E', 'E')
	Menu.Combo.E:addParam('On', 'Use E', SCRIPT_PARAM_ONOFF, true)
	Menu.Combo:addSubMenu('SPELL _R', 'R')
	Menu.Combo.R:addParam('Helper', 'R helper', SCRIPT_PARAM_ONKEYDOWN, false, 82)
	Menu.Combo.R:addParam('Info1', '', SCRIPT_PARAM_INFO, '')
	Menu.Combo.R:addParam('Info2', 'Dangerous spells', SCRIPT_PARAM_INFO, '')
	local rr = false
	for i, spell in pairs(aoe) do
			Menu.Combo.R:addParam(i, i, SCRIPT_PARAM_ONOFF, true)
			rr = true
	end
	for i, spell in pairs(targeted) do
		Menu.Combo.R:addParam(i, i, SCRIPT_PARAM_ONOFF, true)
		rr = true
	end
	if not rr then
		Menu.Combo.R:addParam('Info3', 'No spells to dodge', SCRIPT_PARAM_INFO, '')
	end
	Menu.Combo:addParam('Item', 'Use Items', SCRIPT_PARAM_ONOFF, true)
	Menu.Combo:addParam('Han', 'Hi im Korean', SCRIPT_PARAM_ONKEYTOGGLE, false, 67)
	Menu.Combo:permaShow('Han')
	Menu.Combo:addParam('Key', 'Combo Key', SCRIPT_PARAM_ONKEYDOWN, false, 32)
	Menu:addSubMenu('Orbwalker', 'OS')
	Menu.OS:addParam('Orbwalk', 'Extra orbwalk windup', SCRIPT_PARAM_SLICE, 0, 0, 100, 0)
	Menu.OS:addParam('After', 'Extra after attack windup', SCRIPT_PARAM_SLICE, 0, 0, 100, 0)
	Menu.OS:addParam('Select', 'Focus left-clicked target', SCRIPT_PARAM_ONOFF, true)
	Menu:addSubMenu('Drawings', 'Draw')
	Menu.Draw:addSubMenu('_Q Range', 'Q')
	Menu.Draw.Q:addParam('On', 'Draw', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.Q:addParam('Free', 'Lag-Free circle', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.Q:addParam('Color', 'Color', SCRIPT_PARAM_COLOR, {255, 255, 231, 6})
	Menu.Draw:addSubMenu('_Q Indicator', 'IQ')
	Menu.Draw.IQ:addParam('On', 'Draw', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.IQ:addParam('Free', 'Lag-Free circle', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.IQ:addParam('Color', 'Color', SCRIPT_PARAM_COLOR, {255, 255, 231, 6})
	Menu.Draw:addSubMenu('_R Range', 'R')
	Menu.Draw.R:addParam('On', 'Draw', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.R:addParam('Free', 'Lag-Free circle', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.R:addParam('Color', 'Color', SCRIPT_PARAM_COLOR, {255, 190, 190, 190})
	Menu.Draw:addSubMenu('Auto Attack Range', 'AA')
	Menu.Draw.AA:addParam('On', 'Draw', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.AA:addParam('Free', 'Lag-Free circle', SCRIPT_PARAM_ONOFF, true)
	Menu.Draw.AA:addParam('Color', 'Color', SCRIPT_PARAM_COLOR, {255, 199, 199, 199})
	Menu.Draw:addParam('Target', 'Mark left-clicked target', SCRIPT_PARAM_ONOFF, true)
end

function Welcome()
	PrintChat("<font color=\"#FFA500\">Han Fiora <font color=\"#888888\">loaded</font></font>")
end

function OnLoad()
	InitGame()
	DelayAction(Welcome, 2)
end
